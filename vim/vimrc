"            _
"     _   __(_____ ___  __________
"    | | / / / __ `__ \/ ___/ ___/
"   _| |/ / / / / / / / /  / /__
"  (_|___/_/_/ /_/ /_/_/   \___/
"
"  Vim is sponsored by Diet Coke®
"
set nocompatible
set runtimepath+=~/.vim
set directory^=~/.vim/tmp//

syntax on
filetype plugin indent on
syntax sync minlines=256

colorscheme vim-hardaway

set autochdir
set autoindent
set autoread
set backspace=indent,eol,start
set clipboard=unnamed
set cmdheight=2
set colorcolumn=+1
set completeopt+=longest
set completeopt=menuone,menu,longest
set expandtab
set fillchars+=vert:\ 
set formatoptions-=cro
set guicursor=n-v-c:block-Cursor/lCursor-blinkon0,i-ci:ver25-Cursor/lCursor,r-cr:hor20-Cursor/lCursor
set incsearch
set laststatus=2
set lazyredraw
set list
set listchars=trail:·,space:·
set mouse=a
set noshowmode
set nowrap
set nrformats=
set number
set shiftwidth=2
set shortmess=I
set showcmd
set showmatch
set smartcase
set smartindent
set smarttab
set splitbelow
set splitright
set synmaxcol=128
set tabstop=2
set textwidth=80
set title
set ttimeoutlen=50
set wildignore+=*\\tmp\\*,*.swp,*.swo,*.zip,.git/,.cabal-sandbox
set wildmenu
set wildmode=longest,list,full

if has('nvim')
  set termguicolors
endif

if !has('gui_running')
  set t_Co=256
endif

execute pathogen#infect()

autocmd CursorHold,CursorHoldI * checktime
autocmd FocusGained,BufEnter * :checktime

autocmd vimenter * NERDTree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

autocmd BufNewFile,BufRead,BufReadPost *.css set syntax=postcss
autocmd BufNewFile,BufRead,BufReadPost *.ghci,.ghci.conf set filetype=haskell
autocmd BufNewFile,BufReadPost *.md set filetype=markdown
autocmd FileType haskell setlocal omnifunc=necoghc#omnifunc

" Disable automatic new line comment insertion
autocmd FileType * setlocal formatoptions-=cro

" Reset cursor to terminal settings
autocmd VimLeave * set guicursor=a:ver25-Cursor/lCursor

" Current mode sets cursor shape
let &t_SI = "\<Esc>]50;CursorShape=1\x7"
let &t_SR = "\<Esc>]50;CursorShape=2\x7"
let &t_EI = "\<Esc>]50;CursorShape=0\x7"

let &t_ZH="\e[3m"
let &t_ZR="\e[23m"

let mapleader=','
let maplocalleader=' '
noremap \ ,

" Line motion on display lines
nnoremap k gk
noremap gk k
nnoremap j gj
nnoremap gj j

map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l
map <C-x> <C-w>x

cnoremap <expr> %% getcmdtype() == ':' ? expand('%:h').'/' : '%%'
nnoremap gf :vertical wincmd f<CR>
nnoremap <leader>sv :source $MYVIMRC<CR>
map <C-n> :NERDTreeToggle<CR>

if has('nvim')
  tnoremap <Esc> <C-\><C-n>
endif

nnoremap <leader>gs :Gstatus<CR>
nnoremap <leader>gc :Gcommit<CR>
nnoremap <leader>gp :Git push origin master<CR>

map <silent> tw :GhcModTypeInsert<CR>
map <silent> ts :GhcModSplitFunCase<CR>
map <silent> tq :GhcModType<CR>
map <silent> te :GhcModTypeClear<CR>

vmap a= :Tabularize /=<CR>
vmap a; :Tabularize /::<CR>
vmap a- :Tabularize /-><CR>
vmap a, :Tabularize /<-<CR>
vmap al :Tabularize /[\[\\|,]<CR>

source $HOME/.vim/plugin/nerdtree.vim
source $HOME/.vim/plugin/haskell.vim
source $HOME/.vim/plugin/supertab.vim
source $HOME/.vim/plugin/airline.vim
source $HOME/.vim/plugin/netrw.vim

let g:haskell_tabular = 1
let g:colorizer_auto_color = 0
let g:colorizer_colornames = 1
let g:haskellmode_completion_ghc = 1
let g:jsx_ext_required = 0
let g:highlightedyank_highlight_duration = -1
hi HighlightedyankRegion ctermfg=0 ctermbg=81 guifg=black guibg=steelblue1
