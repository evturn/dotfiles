#!/usr/bin/env bash

#      _               _                                          _
#     | |__   __ _ ___| |__       _ __  _ __ ___  _ __ ___  _ __ | |_
#     | '_ \ / _` / __| '_ \     | '_ \| '__/ _ \| '_ ` _ \| '_ \| __|
#    _| |_) | (_| \__ | | | |    | |_) | | | (_) | | | | | | |_) | |_
#   (_|_.__/ \__,_|___|_| |______| .__/|_|  \___/|_| |_| |_| .__/ \__|
#                          |_____|_|                       |_|

# Check that terminfo exists before changing TERM var to xterm-256color
if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
  export TERM='gnome-256color';
elif infocmp xterm-256color >/dev/null 2>&1; then
  export TERM='xterm-256color';
fi;

prompt_git() {
  local s='';
  local branchName='';
  if [ $(git rev-parse --is-inside-work-tree &>/dev/null; echo "${?}") == '0' ]; then
    if [ "$(git rev-parse --is-inside-git-dir 2> /dev/null)" == 'false' ]; then

      git update-index --really-refresh -q &>/dev/null;

      if ! $(git diff --quiet --ignore-submodules --cached); then
      # Uncommitted changes
        s+='+';
      fi;
      if ! $(git diff-files --quiet --ignore-submodules --); then
      # Unstaged changes
        s+='!';
      fi;
      if [ -n "$(git ls-files --others --exclude-standard)" ]; then
      # Untracked files
        s+='?';
      fi;
      if $(git rev-parse --verify refs/stash &>/dev/null); then
      # Stashed files
        s+='$';
      fi;
    fi;
    branchName="$(git symbolic-ref --quiet --short HEAD 2> /dev/null || \
      git rev-parse --short HEAD 2> /dev/null || \
      echo '(unknown)')";
    [ -n "${s}" ] && s=" [${s}]";
    echo -e "${1}${branchName}${2}${s}";
  else
    return;
  fi;
}

if tput setaf 1 &> /dev/null; then
  tput sgr0; # reset colors
  bold=$(tput bold);
  reset=$(tput sgr0);
  black=$(tput setaf 0);
  blue=$(tput setaf 33);
  cyan=$(tput setaf 37);
  green=$(tput setaf 64);
  orange=$(tput setaf 166);
  purple=$(tput setaf 125);
  red=$(tput setaf 124);
  brgreen=$(tput setaf 35);
  brblue=$(tput setaf 39);
  violet=$(tput setaf 61);
  white=$(tput setaf 15);
  yellow=$(tput setaf 136);
else
  bold='';
  reset="\e[0m";
  black="\e[1;30m";
  blue="\e[1;34m";
  cyan="\e[1;36m";
  green="\e[1;32m";
  orange="\e[1;33m";
  purple="\e[1;35m";
  red="\e[1;31m";
  violet="\e[1;35m";
  white="\e[1;37m";
  yellow="\e[1;33m";
fi;

RED="\e[1;31m";
WHITE=$(tput setaf 15);
BLUE=$(tput setaf 39);
YELLOW="\e[1;33m"; 
GREEN="\e[1;32m";
GRAY=$(tput setaf 246);
RESET=$(tput sgr0);

cursor='\033]50;CursorShape=1\x7'
prompt="\[${YELLOW}\]>";
if [ "$(uname)" = "Linux" ]; then
  prompt="\[${YELLOW}\u\[${RED}\]$";
fi
PS1="$cursor\[\033]0;\W\007\]";
PS1+="\[${BLUE}\]\w";
PS1+="\$(prompt_git \"\[${WHITE}\] \[${WHITE}\]\" \"\[${GRAY}\]\")";
PS1+="\n";
PS1+="$prompt \[${RESET}\]"
export PS1;
unset prompt;

PS2="\[${YELLOW}\]â†’ \[${RESET}\]";
export PS2;
